activity <- read.csv(fileName, stringsAsFactors = FALSE)
str(activity)
?barplot
qplor(activity$date, data = activity)
qplot(activity$date, data = activity)
qplot(activity$date, data = activity, geom="bar")
qplot(activity$date, data = activity, geom="bar", weight=sum(step))
qplot(activity$date, data = activity, geom="bar", weight=sum(step))
qplot(activity$date, data = activity, geom="bar", weight=step)
df <- aggregate(steps ~ date, data = activity, sum)
df
qplot(df$date, data = df, geom="bar", weight=steps)
str(activity)
qplot(activity$date, data = activity, geom="bar", weight=steps)
qplot(activity$date, data = activity, geom="bar", weight=sum(steps))
qplot(activity$date, data = activity, geom="bar")
qplot(date ~ steps, data = activity, geom="bar")
qplot(date ~ sum(steps), data = activity, geom="bar")
activity$date = as.Date(activity$date, "%Y-%m-%d")
WeekDay = as.character(activity$Date, 'a')
WeekDay
WeekDay = as.character(activity$Date, '%a')
WeekDay
WeekDay = as.character(activity$Date, '%a')
WeekDay = as.character(activity$date, '%a')
WeekDay
?barplot
barplot(tN, col = heat.colors(12), log = "y")
activity$date = as.Date(activity$date, "%Y-%m-%d")
activity$DayName = as.Date(activity$date, "%Y-%m-%d")
activity$date = as.Date(activity$date, "%Y-%m-%d")
activity$DayName = as.character(activity$date, '%a')
str(activity)
activity$day = as.character(activity$date, '%a')
activity$day = as.character(activity$date, '%a')
WeekDay = as.character(activity$date, '%a')
str(activity$interval)
table(activity$interval)
datetime = paste(activity$date, "00:00:00", sep = ' ')
datetime
install.packages("lubridate")
library(lubridate)
lubridate
library(lubridate)
?lubridate
head(strptime(datetime))
strptime(datetime)
datetime
head(strptime(datetime, "%Y-%m-%d %H:%M:%S"))
head(strptime(datetime, "%Y-%m-%d %H:%M:%S") + 5 * 60)
head(strptime(datetime, "%Y-%m-%d %H:%M:%S") + activity$interval * 60)
head(strptime(datetime, "%Y-%m-%d %H:%M:%S") + activity$interval * 60, tz="GMT")
head(strptime(datetime, "%Y-%m-%d %H:%M:%S") + activity$interval * 60, tz="UTC")
head(strptime(datetime, "%Y-%m-%d %H:%M:%S") + activity$interval * 60, tz="EST5EDT")
head(strptime(datetime, "%Y-%m-%d %H:%M:%S",tz="EST5EDT") + activity$interval * 60)
head(strptime(datetime, "%Y-%m-%d %H:%M:%S",tz="GMT") + activity$interval * 60)
datetime = strptime(paste(activity$date, "00:00:00", sep = ' '), "%Y-%m-%d %H:%M:%S",tz="GMT") + activity$interval * 60
str(activity)
url <- "https://github.com/BellyTheMagnificent/RepData_PeerAssessment1/blob/master/activity.zip"
zipName <- "activity.zip"
download.file(url, zipName, method = "curl")
unzip(zipName)
activity <- read.csv(fileName, stringsAsFactors = FALSE)
activity$date = as.Date(activity$date, "%Y-%m-%d")
activity$day = as.character(activity$date, '%a')
activity$datetime= paste(activity$date, "00:00:00", sep = ' ')
str(activity)
datetime = strptime(paste(activity$date, "00:00:00", sep = ' '), "%Y-%m-%d %H:%M:%S",tz="GMT")
str(activity)
activity$datetime= strptime(paste(activity$date, "00:00:00", sep = ' '), "%Y-%m-%d %H:%M:%S",tz="GMT") + activity$interval * 60
str(activity)
table(activity$datetime)
tail(activity$datetime)
activity$date = as.Date(activity$date, "%Y-%m-%d")
activity$day = as.character(activity$date, '%a')
activity$datetime= strptime(paste(activity$date, "00:00:00", sep = ' '), "%Y-%m-%d %H:%M:%S",tz="GMT") + activity$interval * 60
str(activity)
tapply(steps, activity$date, sum)
tapply(activity$steps, activity$date, sum)
tapply(activity$steps, activity$date, sum, na.omit=TRUE)
with(tapply(activity$steps, activity$date, sum, na.omit=TRUE), qplot())
qplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE))
hist(tapply(activity$steps, activity$date, sum, na.omit=TRUE))
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE))
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps")
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps", ylab="")
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps", xlab="")
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps", xlab = "Date")
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps", xlab = "Date from 1st October to 30th November, 2012")
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day between 1st Oct, 2012 to 30th Nov, 2012")
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day between 2012-10-01 to 2012-11-30)
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day between 2012-10-01 to 2012-11-30)
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day between 2012-10-01 to 2012-11-30")
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps",
xlab = "Date")
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day)
main = "Total steps taken each day)"
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day")
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day",
axes = FALSE)
axis(1, at = bplot, labels = FALSE)
barplot(tapply(activity$steps, activity$date, sum, na.omit=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day"
)
axis(1, at = bplot, labels = FALSE)
df <- aggregate(steps ~ date, data = activity, sum)
df$date <- as.Date(df$date)
bplot <- barplot(df$steps,
xlab = "Date by Day (2012-10-02 to 2012-11-29)",
ylab = "Total Steps",
main = "Total Steps Taken Per Day")
bplot
axis(1, at = bplot, labels = FALSE)
barplot(tapply(activity$steps, activity$date, sum, na.rm=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day"
)
table(tapply(activity$steps, activity$date, sum, na.rm=TRUE))
table(activity$date)
table(activity$date ~ activity$steps)
table(activity$date, activity$steps)
axis(1, at = bplot, labels = FALSE)
axis(1, at = bplot, labels = T)
axis(1, at = bplot, labels = F)
axis(1, at = bplot, labels = F)
barplot(tapply(activity$steps, activity$date, sum, na.rm=TRUE), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day"
)
barplot(tapply(activity$steps, activity$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date",
main = "Total steps taken each day"
)
barplot(tapply(activity$steps, activity$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date",border=NA,
main = "Total steps taken each day"
)
barplot(tapply(activity$steps, activity$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date", angle = 45,
main = "Total steps taken each day"
)
barplot(tapply(activity$steps, activity$date, sum, na.rm=T), width = 1, space = NULL,
names.arg = NULL, legend.text = NULL, beside = FALSE,
horiz = FALSE, density = NULL, angle = 45,
col = NULL, border = par("fg"),
main = NULL, sub = NULL, xlab = NULL, ylab = NULL,
xlim = NULL, ylim = NULL, xpd = TRUE, log = "",
axes = TRUE, axisnames = TRUE,
cex.axis = par("cex.axis"), cex.names = par("cex.axis"),
inside = TRUE, plot = TRUE, axis.lty = 0, offset = 0,
add = FALSE, args.legend = NULL, ...)
barplot(tapply(activity$steps, activity$date, sum, na.rm=T), width = 1, space = NULL,
names.arg = NULL, legend.text = NULL, beside = FALSE,
horiz = FALSE, density = NULL, angle = 45,
col = NULL, border = par("fg"),
main = NULL, sub = NULL, xlab = NULL, ylab = NULL,
xlim = NULL, ylim = NULL, xpd = TRUE, log = "",
axes = TRUE, axisnames = TRUE,
cex.axis = par("cex.axis"), cex.names = par("cex.axis"),
inside = TRUE, plot = TRUE, axis.lty = 0, offset = 0,
add = FALSE, args.legend = NULL)
plot(1:10, xaxt='n')
plot(1:10, yaxt='n')
plot(1:10, xaxt='n')
plot(1:10, yaxt='n')
barplot(tapply(activity$steps, activity$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date", angle = 45,
main = "Total steps taken each day",
xaxt='n'
)
barplot(tapply(activity$steps, activity$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date", angle = 45,
main = "Total steps taken each day",
xaxt='n'
)
axis(1, at = bplot, labels = F)
axis(1, at = barplot, labels = F)
bplot = barplot(tapply(activity$steps, activity$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date", angle = 45,
main = "Total steps taken each day",
xaxt='n'
)
axis(1, at = bplot, labels = F)
bplotplot(1:10, xaxt='n')
bplot = barplot(tapply(activity$steps, activity$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date", angle = 45,
main = "Total steps taken each day",
xaxt='n'
)
axis(1, at = bplot, labels = F)
bplot = barplot(tapply(activity$steps, activity$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date",
main = "Steps taken between 2012-10-01 to 2012-11-30",
xaxt='n'
)
axis(1, at = bplot, labels = F)
bplot = barplot(tapply(activity$steps, activity$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date",
main = "Steps taken between 2012/10/01 to 2012/11/30",
xaxt='n'
)
axis(1, at = bplot, labels = F)
df
tapply(activity$steps, activity$date, mean, na.rm=T)
table(tapply(activity$steps, activity$date, mean, na.rm=T))
tapply(activity$steps, activity$date, sum, na.rm=T)
mean(tapply(activity$steps, activity$date, sum, na.rm=T))
df <- aggregate(steps ~ interval, data = activity, mean)
plot(df$interval, df$steps,
type = "l",
xlab = "5-Minute Intervals",
ylab = "Average Steps Taken Across All Days",
col = "blue")
}
tapply(activity$steps, activity$interval, mean)
plot(tapply(activity$steps, activity$interval, mean))
tapply(activity$steps, activity$interval, mean)
str(activity)
tapply(activity$steps, activity$interval, mean, na.rm=T)
plot(tapply(activity$steps, activity$interval, mean, na.rm=T))
plot(tapply(activity$steps, activity$interval, mean, na.rm=T), type=true)
plot(tapply(activity$steps, activity$interval, mean, na.rm=T), type='l')
plot(tapply(activity$steps, activity$interval, mean, na.rm=T), type='l', xlim= 100)
plot(tapply(activity$steps, activity$interval, mean, na.rm=T), type='l', xlim= 1)
plot(tapply(activity$steps, activity$interval, mean, na.rm=T), type='l', breaks = 24)
plot(tapply(activity$steps, activity$interval, mean, na.rm=T), type='l', breaks = 24, col="blue")
plot(activity$interval, tapply(activity$steps, activity$interval, mean, na.rm=T), type='l', breaks = 24, col="blue")
plot(tapply(activity$steps, activity$interval, mean, na.rm=T), type='l', breaks = 24, col="blue")
plot(tapply(activity$steps, activity$interval, mean, na.rm=T), type='l', break = 24, col="blue")
aggByInterval = aggregate(steps ~ interval = activity, mean)
aggByInterval = aggregate(steps ~ interval, data = activity, mean)
aggByInterval
qplot(aggByInterval)
qplot(aggByInterval$date, aggByInterval$steps)
aggByInterval
qplot(aggByInterval$date, aggByInterval$steps)
ggplot(maacs, aes(logpm25, NocturnalSympt))
ggplot(aggByInterval, aes(interval,steps))
ggplot(aggByInterval, aes(interval,steps)) + geom_line()
ggplot(aggByInterval, aes(interval,steps), main ="average number of steps taken on particular interval") + geom_line()
ggplot(aggByInterval, aes(interval,steps), title="average number of steps taken") + geom_line()
ggplot(aggByInterval, aes(interval,steps), title="average number of steps taken") + geom_line()
ggplot(aggByInterval, aes(interval,steps), title="average number of steps taken") + geom_line() + labs(title = "average number of steps taken")
ggplot(aggByInterval, aes(interval,steps), title="average number of steps taken") + geom_line() + labs(title = "Average number of steps taken")
ggplot(aggByInterval, aes(interval,steps), title="average number of steps taken") + geom_line() + labs(title = "Average number of steps taken on particular interval")
which.max(aggByInterval)
which.max(aggByInterval$steps)
aggByinternal[which.max(aggByInterval$steps),1]
aggByInternal[which.max(aggByInterval$steps),1]
aggByInterva[which.max(aggByInterval$steps),1]
aggByInterval[which.max(aggByInterval$steps),1]
head(strptime(datetime, "%Y-%m-%d %H:%M:%S",tz="GMT") + 835 * 60)
datetime = strptime(paste(activity$date, "00:00:00", sep = ' '), "%Y-%m-%d %H:%M:%S",tz="GMT") + activity$interval * 60
datetime = strptime(paste(activity$date, "00:00:00", sep = ' '), "%Y-%m-%d %H:%M:%S",tz="GMT") + 835 * 60
datetime
datetime = strptime("2010-01-01 00:00:00","%Y-%m-%d %H:%M:%S")
datetime = strptime("2010-01-01 00:00:00","%Y-%m-%d %H:%M:%S")+ 835 * 60
datetime
datetime = strptime("2010-01-01 00:00:00","%Y-%m-%d %H:%M:%S", tz="GMT")+ 835 * 60
datetime
datetime = as.character(strptime("2010-01-01 00:00:00","%Y-%m-%d %H:%M:%S", tz="GMT")+ 835 * 60," %H:%M")
datetime
datetime = as.character(strptime("2010-01-01 00:00:00","%Y-%m-%d %H:%M:%S", tz="GMT")+ 835 * 60," %H%M")
datetime
datetime = as.character(strptime("2010-01-01 00:00:00","%Y-%m-%d %H:%M:%S", tz="GMT")+ 835 * 60,"%H%M")
datetime = as.character(strptime("2010-01-01 00:00:00","%Y-%m-%d %H:%M:%S", tz="GMT")+ 835 * 60,"%h%M")
datetime
datetime = as.character(strptime("2010-01-01 00:00:00","%Y-%m-%d %H:%M:%S", tz="GMT")+ 835 * 60,"%I%M")
datetime
datetime = as.character(strptime("2010-01-01 00:00:00","%Y-%m-%d %H:%M:%S", tz="GMT")+ 835 * 60,"%I%M %p")
datetime
table(activity$steps)
activity[activity$steps == NA, ]
nrow(activity[activity$steps == NA, ])
dim(activity)
summary(activity)
summary(activity$steps)
table(summary(activity$steps))
summary(activity$steps)
summary(activity$steps)[4,]
summary(activity$steps)[4]
summary(activity$steps)[6]
summary(activity$steps)[7]
imputeData = activity
imputeData = complete(mice(activity))
library(mice)
imputeData = activity
imputeData = complete(mice(activity))
imputeData = complete(mice(activity[]))
imputeData = complete(mice(activity$steps))
imputeData = complete(mice(activity))
set.seed(123)
imputeData = activity
imputeData = complete(mice(activity))
patchData = complete(mice(activity))
impute = complete(mice(activity))
mice(activity)
complete(activity)
x<-complete(activity)
x<-complete(mice(activity))
x<-complete(mice(activity[,1:3]))
x<-complete(mice(activity[,2:3]))
x<-complete(mice(activity[,1]))
x<-complete(mice(activity[,1:5]))
str(activity)
patchcol = setdiff(names(activity),c("date","datetime"))
patchset = complete(mice(activity[patchcol]))
patchset
plot(patchset$steps)
plot(activity$steps)
plot(patchset$steps)
bplot = barplot(tapply(imputeset$steps, imputeset$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date",
main = "Steps taken between 2012/10/01 to 2012/11/30 from imputed dataset",
xaxt='n'
)
axis(1, at = bplot, labels = F)
imputeset = complete(mice(activity[patchcol]))
imputeset$date = activity$date
imputeset$datetime = activity$datetime
bplot = barplot(tapply(imputeset$steps, imputeset$date, sum, na.rm=T), ylab="Total steps",
xlab = "Date",
main = "Steps taken between 2012/10/01 to 2012/11/30 from imputed dataset",
xaxt='n'
)
axis(1, at = bplot, labels = F)
summary(imputeset)
which(is.na(activity$steps))
length(which(is.na(activity$steps)))
aggByInterval
df_merge = merge(activity, aggByInterval, by = "interval")
df_merge
str(df_merge)
aggByInterval = aggregate(steps ~ interval, data = activity, mean)
df_merge[which(is.na(activity$steps))]
df_merge[which(is.na(activity$steps)),]
qplot(activity$steps, activity$interval, facets="day")
qplot(activity$steps, activity$interval, facet="day")
qplot(activity$steps, activity$interval, facets="day")
str(activity)
qplot(activity$steps, activity$interval, facets= . ~ day)
qplot(activity$steps, activity$interval, facets= . ~ day) + geom_point()
qplot(steps, interval, data = activity, facets= . ~ day)
imputeset
imputeset$weekdayorweekend = imputeset$day == "Sun" || imputeset$day == "Sat"
summary(imputeset)
table(imputeset$weekdayorweekend)
if (imputeset$day == "Sun" || imputeset$day == "Sat")
{
imputeset$weekdayorweekend = "Weekend"
}
else
{
imputeset$weekdayorweekend = "Weekday"
}
if (imputeset$day == "Sun" || imputeset$day == "Sat"){
imputeset$weekdayorweekend = "Weekend"
}
else{
imputeset$weekdayorweekend = "Weekday"
}
if(imputeset$day == "Sun" || imputeset$day == "Sat"){
imputeset$weekdayorweekend = "Weekend"
}
else{
imputeset$weekdayorweekend = "Weekday"
}
if(imputeset$day == "Sun" || imputeset$day == "Sat"){
imputeset$weekdayorweekend = "Weekend";
}
else{
imputeset$weekdayorweekend = "Weekday";
}
if(imputeset$day == "Sun" || imputeset$day == "Sat"){
imputeset$weekdayorweekend = "Weekend";
}else{
imputeset$weekdayorweekend = "Weekday";
}
table(imputeset$weekdayorweekend)
weekdays(imputeset$date)
weekdayorweekend = imputeset$day == "Sun" || imputeset$day == "Sat"
impuset$weekEndDay[weekdayorweekend==TRUE]
imputeset$weekEndDay[weekdayorweekend==TRUE]
weekdayorweekend
weekdayorweekend = imputeset$day == "Sun" || imputeset$day == "Sat"
weekdayorweekend
weekdayorweekend = imputeset$day == "Sun" | imputeset$day == "Sat"
weekdayorweekend
if(imputeset$day == "Sun" | imputeset$day == "Sat"){
imputeset$weekdayorweekend = "Weekend";
}else{
imputeset$weekdayorweekend = "Weekday";
}
imputeset$day = weekdays(imputeset$date)
if(imputeset$day %in% c("Sunday", "Saturday"){
imputeset$weekdayorweekend = "Weekend";
}else{
imputeset$weekdayorweekend = "Weekday";
}
if(imputeset$day %in% c("Sunday", "Saturday")){
imputeset$weekdayorweekend = "Weekend";
}else{
imputeset$weekdayorweekend = "Weekday";
}
table(imputeset$weekdayorweekend)
weekdayorweekend = imputeset$day == "Sunday" | imputeset$day == "Saturday"
table(weekdayorweekend)
imputeset$weekEndDay[weekdayorweekend==TRUE]
imputeset$weekEndDay[weekdayorweekend==TRUE] = as.factor("Weekend")
imputeset$weekEndDay[weekdayorweekend==FALSE] = as.factor("Weekday")
table(weekdayorweekend)
table(imputeset$weekEndDay)
summary(imputeset$weekEndDay)
imputeset$weekEndDay = NA
table(imputeset$weekEndDay)
imputeset[day == "Sunday" | day == "Saturday"]$date
imputeset[day %in% c("Saturday","Sunday")]$date
imputeset[imputeset$day %in% c("Saturday","Sunday")]$date
imputeset$date[imputeset$day %in% c("Saturday","Sunday")]
imputeset$weekEndDay[imputeset$day %in% c("Saturday","Sunday")] = as.factor("Weekend")
imputeset$weekEndDay
imputeset$weekEndDay[imputeset$day %in% c("Saturday","Sunday")] = "Weekend"
imputeset$weekEndDay
imputeset$weekEndDay[imputeset$weekEndDay == NA] = "Weekday"
imputeset$weekEndDay
imputeset$weekEndDay[which(is.na(imputeset$weekEndDay))] = "Weekday"
imputeset$weekEndDay
table(imputeset$day, imputeset$weekEndDay)
table(imputeset$day)
table(activity$day)
table(month(activity$date), activity$day)
imputeset$weekEndDay = as.factor(imputeset$weekEndDay)
str(imputeset)
aggByInterval_new = aggregate(steps ~ interval + weekEndDay, data = imputeset, mean)
aggByInterval_new
summary(aggByInterval_new)
with(aggByInterval_new, xyplot(steps~interval|WeekEndDay,
type = "l",
layout = c(1,2)))
with(aggByInterval_new, xyplot(steps~interval|weekEndDay,
type = "l",
layout = c(1,2)))
qplot(aggByInterval_new, steps, interval, facets = . ~ weekEndDay)
qplot(aggByInterval_new, steps, interval, facets = .~ weekEndDay)
qplot(aggByInterval_new, steps, interval)
qplot(steps, interval, data = aggByInterval_new, , facets = .~weekEndDay)
qplot(steps, interval, data = aggByInterval_new, , facets = weekEndDay~.)
qplot(steps, interval, data = aggByInterval_new, , facets = weekEndDay~., type="l")
qplot(steps, interval, data = aggByInterval_new, , facets = weekEndDay~.) + geom_line()
qplot(steps, interval, data = aggByInterval_new, , facets = weekEndDay~.) + geom_line(col="blue")
qplot(steps, interval, data = aggByInterval_new,facets = weekEndDay~.) + geom_line(col="blue")
with(aggByInterval_new, xyplot(steps~interval|weekEndDay,
type = "l",
layout = c(1,2)))
with(aggByInterval_new, xyplot(steps~interval|weekEndDay,
type = "l",
layout = c(1,2)))
Calculate new aggregate data frame
with(aggByInterval_new, xyplot(steps~interval|weekEndDay,
type = "l",
layout = c(1,2),
ylab= "Number of steps"
))
with(aggByInterval_new, xyplot(steps~interval|weekEndDay,
type = "l",
layout = c(1,2),
ylab= "Number of steps",
xlab = "Interval"
))
qplot(steps, interval, data = aggByInterval_new,facets = weekEndDay~.) + geom_line(col="blue")
qplot(interval, steps, data = aggByInterval_new,facets = weekEndDay~.) + geom_line(col="blue")
gglot(interval, steps, data = aggByInterval_new,facets = weekEndDay~.) + geom_line(col="blue")
ggplot(interval, steps, data = aggByInterval_new,facets = weekEndDay~.) + geom_line(col="blue")
ggplot2(interval, steps, data = aggByInterval_new,facets = weekEndDay~.) + geom_line(col="blue")
ggplot(aggByInterval_new) + geom_line(aes(x=interval,y=steps, col="blue"))
ggplot(aggByInterval_new) + geom_line(aes(x=interval,y=steps, colour="blue"))
ggplot(aggByInterval_new) + geom_line(aes(x=interval,y=steps), colour="blue")
ggplot(aggByInterval_new, facets = ~.weekEndDay) + geom_line(aes(x=interval,y=steps), colour="blue")
ggplot(aggByInterval_new) + geom_line(aes(x=interval,y=steps), colour="blue", facets = ~.weekEndDay)
facet_grid(.~weekEndDay)
ggplot(aggByInterval_new) +
geom_line(aes(x=interval,y=steps), colour="blue", facets = ~.weekEndDay) +
facet_grid(.~weekEndDay)
ggplot(aggByInterval_new) +
geom_line(aes(x=interval,y=steps), colour="blue", facets = ~.weekEndDay) +
facet_grid(weekEndDay.~)
ggplot(aggByInterval_new) +
geom_line(aes(x=interval,y=steps), colour="blue", facets = ~.weekEndDay) +
facet_grid(weekEndDay~.)
ggplot(aggByInterval_new) +
geom_line(aes(x=interval,y=steps), colour="blue", facets = ~.weekEndDay) +
facet_grid(weekEndDay~.) +
lab(title = "Weekday vs Weekend", x = "Interval", y = "Number of steps")
ggplot(aggByInterval_new) +
geom_line(aes(x=interval,y=steps), colour="blue", facets = ~.weekEndDay) +
facet_grid(weekEndDay~.) +
labs(title = "Weekday vs Weekend", x = "Interval", y = "Number of steps")
